import Mathlib
open BigOperators


section putnam_1976_a2 -- TODO: This needs to be account for in the script
open MvPolynomial

theorem putnam_1976_a2
(P : MvPolynomial (Fin 2) ‚Ñ§ := (X 0)^2*(X 1) + (X 0)*(X 1)^2)
(Q : MvPolynomial (Fin 2) ‚Ñ§ := (X 0)^2 + (X 0)*(X 1) + (X 2)^2)
(F : ‚Ñï ‚Üí MvPolynomial (Fin 2) ‚Ñ§ := fun n : ‚Ñï => ((X 0) + (X 1))^n - (X 0)^n - (X 1)^n)
(G : ‚Ñï ‚Üí MvPolynomial (Fin 2) ‚Ñ§ := fun n : ‚Ñï => ((X 0) + (X 1))^n + (X 0)^n + (X 1)^n)
(i : Fin 2 ‚Üí MvPolynomial (Fin 2) ‚Ñ§ := fun j : Fin 2 => ite (j = 0) P Q)
: ‚àÄ n : ‚Ñï, n > 0 ‚Üí ‚àÉ A : MvPolynomial (Fin 2) ‚Ñ§, F n = aeval i A ‚à® G n = aeval i A :=
sorry

end putnam_1976_a2

abbrev putnam_1976_a3_solution : Set (‚Ñï √ó ‚Ñï √ó ‚Ñï √ó ‚Ñï) := sorry
-- {(3, 2, 2, 3), (2, 3, 3, 2)}
theorem putnam_1976_a3
: {(p, r, q, s) : ‚Ñï √ó ‚Ñï √ó ‚Ñï √ó ‚Ñï | Nat.Prime p ‚àß Nat.Prime q ‚àß r > 1 ‚àß s > 1 ‚àß |(p^r : ‚Ñ§) - q^s| = 1} = putnam_1976_a3_solution :=
sorry

open Polynomial

noncomputable abbrev putnam_1976_a4_solution : (‚Ñù ‚Üí ‚Ñù) √ó (‚Ñù ‚Üí ‚Ñù) := sorry
-- (fun r : ‚Ñù => -1/(r + 1), fun r : ‚Ñù => -(r + 1)/r)
theorem putnam_1976_a4
(a b c d : ‚Ñ§)
(r : ‚Ñù)
(P : Polynomial ‚Ñö := X^3 + (C (a : ‚Ñö))*X^2 + (C (b : ‚Ñö))*X - (C 1))
(Q : Polynomial ‚Ñö := X^3 + (C (c : ‚Ñö))*X^2 + (C (d : ‚Ñö))*X + (C 1))
(hP : aeval r P = 0 ‚àß Irreducible P)
(hQ : aeval (r + 1) Q = 0)
: ‚àÉ s : ‚Ñù, aeval s P = 0 ‚àß (s = putnam_1976_a4_solution.1 r ‚à® s = putnam_1976_a4_solution.2 r) :=
sorry

theorem putnam_1976_a6
(f : ‚Ñù ‚Üí ‚Ñù)
(hfdiff : ContDiff ‚Ñù 2 f)
(hfbd : ‚àÄ x : ‚Ñù, |f x| ‚â§ 1)
(hf0 : (f 0)^2 + (deriv f 0)^2 = 4)
: ‚àÉ y : ‚Ñù, (f y) + (iteratedDeriv 2 f y) = 0 :=
sorry

open Filter Topology

abbrev putnam_1976_b1_solution : ‚Ñï √ó ‚Ñï := sorry
-- (4, 1)
theorem putnam_1976_b1
: Tendsto (fun n : ‚Ñï => ((1 : ‚Ñù)/n)*‚àë k in Finset.Icc (1 : ‚Ñ§) n, (Int.floor ((2*n)/k) - 2*Int.floor (n/k))) atTop
(ùìù (Real.log putnam_1976_b1_solution.1 - putnam_1976_b1_solution.2)) :=
sorry

abbrev putnam_1976_b2_solution : ‚Ñï √ó Set (List (‚Ñ§ √ó ‚Ñ§)) := sorry
-- (8, {[(0, 0)], [(2, 0)], [(0, 1)], [(0, 2)], [(0, 3)], [(0, 4)], [(0, 5)], [(0, 6)]})
theorem putnam_1976_b2
(G : Type*) [Group G]
(A B : G)
(word : List (‚Ñ§ √ó ‚Ñ§) ‚Üí G := fun w : List (‚Ñ§ √ó ‚Ñ§) => (List.map (fun t : ‚Ñ§ √ó ‚Ñ§ => A^(t.1)*B^(t.2)) w).prod)
(hG : ‚àÄ g : G, ‚àÉ w : List (‚Ñ§ √ó ‚Ñ§), g = word w)
(hA : A^4 = 1 ‚àß A^2 ‚â† 1)
(hB : B^7 = 1 ‚àß B ‚â† 1)
(h1 : A*B*A^(-(1 : ‚Ñ§))*B = 1)
(S : Set G := {g : G | ‚àÉ C : G, C^2 = g})
: S.ncard = putnam_1976_b2_solution.1 ‚àß S = {word w | w ‚àà putnam_1976_b2_solution.2} :=
sorry

open ProbabilityTheory MeasureTheory
theorem putnam_1976_b3
(Œ© : Type*)
[MeasurableSpace Œ©]
(Œº : Measure Œ©)
[IsProbabilityMeasure Œº]
(n : ‚Ñï)
(hn : n ‚â• 1)
(a : ‚Ñù)
(ha : 0 ‚â§ a ‚àß a < 1/4)
(u : ‚Ñï ‚Üí ‚Ñù)
(hu01 : u 0 = 1 ‚àß u 1 = 1 - a)
(huk : ‚àÄ k ‚â• 1, u (k + 1) = u k - a * (u (k-1)))
(hupos : ‚àÄ k : ‚Ñï, u k > 0)
(events : Fin n ‚Üí Set Œ©)
(heventsmeas : ‚àÄ i : Fin n, MeasurableSet (events i))
(heventsprob : ‚àÄ i : Fin n, Œº (events i) ‚â• ENNReal.ofReal (1 - a))
(heventsindep : ‚àÄ i j : Fin n, |(i : ‚Ñ§) - (j : ‚Ñ§)| > 1 ‚Üí IndepSet (events i) (events j) Œº)
: Œº (‚ãÇ i : Fin n, events i) ‚â• ENNReal.ofReal (u n) :=
sorry

noncomputable abbrev putnam_1976_b5_solution : ‚Ñï ‚Üí Polynomial ‚Ñ§ := sorry
-- fun n => C (Nat.factorial n)
theorem putnam_1976_b5
: ‚àÄ n : ‚Ñï, ‚àë k in Finset.range (n + 1), C ((-(1 : ‚Ñ§))^k * Nat.choose n k) * (X - (C (k : ‚Ñ§)))^n = putnam_1976_b5_solution n :=
sorry

theorem putnam_1976_b6
(œÉ : ‚Ñï ‚Üí ‚Ñ§ := fun N : ‚Ñï => ‚àë d in Nat.divisors N, (d : ‚Ñ§))
(quasiperfect : ‚Ñï ‚Üí Prop := fun N : ‚Ñï => œÉ N = 2*N + 1)
: ‚àÄ N : ‚Ñï, quasiperfect N ‚Üí ‚àÉ m : ‚Ñ§, Odd m ‚àß m^2 = N :=
sorry
