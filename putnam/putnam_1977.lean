import Mathlib
open BigOperators


noncomputable abbrev putnam_1977_a1_solution : ‚Ñù := sorry
-- -7 / 8
theorem putnam_1977_a1
(y : ‚Ñù ‚Üí ‚Ñù := fun x ‚Ü¶ 2 * x ^ 4 + 7 * x ^ 3 + 3 * x - 5)
(S : Finset ‚Ñù)
(hS : S.card = 4)
: (Collinear ‚Ñù {P : Fin 2 ‚Üí ‚Ñù | P 0 ‚àà S ‚àß P 1 = y (P 0)} ‚Üí (‚àë x in S, x) / 4 = putnam_1977_a1_solution) :=
sorry

abbrev putnam_1977_a2_solution : ‚Ñù ‚Üí ‚Ñù ‚Üí ‚Ñù ‚Üí ‚Ñù ‚Üí Prop := sorry
-- fun a b c d ‚Ü¶ d = a ‚àß b = -c ‚à® d = b ‚àß a = -c ‚à® d = c ‚àß a = -b
theorem putnam_1977_a2
: (‚àÄ a b c d : ‚Ñù, a ‚â† 0 ‚Üí b ‚â† 0 ‚Üí c ‚â† 0 ‚Üí d ‚â† 0 ‚Üí ((a + b + c = d ‚àß 1 / a + 1 / b + 1 / c = 1 / d) ‚Üî putnam_1977_a2_solution a b c d)) :=
sorry

abbrev putnam_1977_a3_solution : (‚Ñù ‚Üí ‚Ñù) ‚Üí (‚Ñù ‚Üí ‚Ñù) ‚Üí (‚Ñù ‚Üí ‚Ñù) := sorry
-- fun f g x ‚Ü¶ g x - f (x - 3) + f (x - 1) + f (x + 1) - f (x + 3)
theorem putnam_1977_a3
(f g : ‚Ñù ‚Üí ‚Ñù)
: let h := putnam_1977_a3_solution f g; (‚àÄ x : ‚Ñù, f x = (h (x + 1) + h (x - 1)) / 2 ‚àß g x = (h (x + 4) + h (x - 4)) / 2) :=
sorry

open RingHom Set

noncomputable abbrev putnam_1977_a4_solution : RatFunc ‚Ñù := sorry
-- RatFunc.X / (1 - RatFunc.X)
theorem putnam_1977_a4
: (‚àÄ x ‚àà Ioo 0 1, putnam_1977_a4_solution.eval (id ‚Ñù) x = ‚àë' n : ‚Ñï, x ^ 2 ^ n / (1 - x ^ 2 ^ (n + 1))) :=
sorry

open Nat

theorem putnam_1977_a5
(p m n : ‚Ñï)
(hp : Nat.Prime p)
(hmgen : m ‚â• n)
: (choose (p * m) (p * n) ‚â° choose m n [MOD p]) :=
sorry

abbrev putnam_1977_a6_solution : Prop := sorry
-- True
theorem putnam_1977_a6
(X : Set (‚Ñù √ó ‚Ñù) := Set.prod (Icc 0 1) (Icc 0 1))
(room : (‚Ñù √ó ‚Ñù) ‚Üí ‚Ñù := fun (a,b) ‚Ü¶ min (min a (1 - a)) (min b (1 - b)))
: ((‚àÄ f : (‚Ñù √ó ‚Ñù) ‚Üí ‚Ñù, Continuous f ‚Üí (‚àÄ P ‚àà X, ‚à´ x in (P.1 - room P)..(P.1 + room P), ‚à´ y in (P.2 - room P)..(P.2 + room P), f (x, y) = 0) ‚Üí (‚àÄ P ‚àà X, f P = 0)) ‚Üî putnam_1977_a6_solution) :=
sorry

open Filter Topology

noncomputable abbrev putnam_1977_b1_solution : ‚Ñù := sorry
-- 2 / 3
theorem putnam_1977_b1
: Tendsto (fun N ‚Ü¶ ‚àè n in Finset.Icc (2 : ‚Ñ§) N, ((n : ‚Ñù) ^ 3 - 1) / (n ^ 3 + 1)) atTop (ùìù putnam_1977_b1_solution) :=
sorry

abbrev putnam_1977_b3_solution : Prop := sorry
-- False
theorem putnam_1977_b3
(P : ‚Ñù √ó ‚Ñù √ó ‚Ñù ‚Üí Prop := fun (a, b, c) => Irrational a ‚àß Irrational b ‚àß Irrational c ‚àß a > 0 ‚àß b > 0 ‚àß c > 0 ‚àß a + b + c = 1)
(balanced : ‚Ñù √ó ‚Ñù √ó ‚Ñù ‚Üí Prop := fun (a, b, c) => a < 1/2 ‚àß b < 1/2 ‚àß c < 1/2)
(B : ‚Ñù √ó ‚Ñù √ó ‚Ñù ‚Üí ‚Ñù √ó ‚Ñù √ó ‚Ñù := fun (a, b, c) => (ite (a > 1/2) (2*a - 1) (2*a), ite (b > 1/2) (2*b - 1) (2*b), ite (c > 1/2) (2*c - 1) (2*c)))
: (‚àÄ t : ‚Ñù √ó ‚Ñù √ó ‚Ñù, P t ‚Üí ‚àÉ n : ‚Ñï, balanced (B^[n] t)) ‚Üî putnam_1977_b3_solution :=
sorry

theorem putnam_1977_b5
(n : ‚Ñï)
(hn : n > 1)
(a : Fin n ‚Üí ‚Ñù)
(A : ‚Ñù)
(hA : A + ‚àë i : Fin n, (a i)^2 < (1/((n : ‚Ñù) - 1))*(‚àë i : Fin n, a i)^2)
: ‚àÄ i j : Fin n, i < j ‚Üí A < 2*(a i)*(a j) :=
sorry

open Set

theorem putnam_1977_b6
[Group G]
(H : Subgroup G)
(h : ‚Ñï := Nat.card H)
(a : G)
(ha : ‚àÄ x : H, (x*a)^3 = 1)
(P : Set G := {g : G | ‚àÉ xs : List H, (xs.length ‚â• 1) ‚àß g = (List.map (fun h : H => h*a) xs).prod})
: (Finite P) ‚àß (P.ncard ‚â§ 3*h^2) :=
sorry
